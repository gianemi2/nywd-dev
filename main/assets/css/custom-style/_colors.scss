@use "../base" as *;

// --------------------------------

// (START) Global editor code https://codyhouse.co/ds/globals/colors

// --------------------------------

:root,
[data-theme="default"] {
  // main
  @include defineColorHSL(--color-primary-darker, 210, 9%, 0%);
  @include defineColorHSL(--color-primary-dark, 210, 9%, 9%);
  @include defineColorHSL(--color-primary, 210, 9%, 18%);
  @include defineColorHSL(--color-primary-light, 210, 9%, 24%);
  @include defineColorHSL(--color-primary-lighter, 210, 9%, 30%);

  @include defineColorHSL(--color-accent-darker, 213, 8%, 33%);
  @include defineColorHSL(--color-accent-dark, 213, 8%, 39%);
  @include defineColorHSL(--color-accent, 213, 8%, 45%);
  @include defineColorHSL(--color-accent-light, 213, 8%, 51%);
  @include defineColorHSL(--color-accent-lighter, 213, 8%, 57%);

  @include defineColorHSL(--color-secondary-darker, 0, 0%, 83%);
  @include defineColorHSL(--color-secondary-dark, 0, 0%, 89%);
  @include defineColorHSL(--color-secondary, 0, 0%, 95%);
  @include defineColorHSL(--color-secondary-light, 0, 0%, 98%);
  @include defineColorHSL(--color-secondary-lighter, 0, 0%, 100%);

  @include defineColorHSL(--color-black, 204, 28%, 7%);
  @include defineColorHSL(--color-white, 0, 0%, 100%);

  // feedback
  @include defineColorHSL(--color-warning-darker, 46, 100%, 47%);
  @include defineColorHSL(--color-warning-dark, 46, 100%, 50%);
  @include defineColorHSL(--color-warning, 46, 100%, 61%);
  @include defineColorHSL(--color-warning-light, 46, 100%, 71%);
  @include defineColorHSL(--color-warning-lighter, 46, 100%, 80%);

  @include defineColorHSL(--color-success-darker, 122, 50%, 47%);
  @include defineColorHSL(--color-success-dark, 122, 50%, 52%);
  @include defineColorHSL(--color-success, 122, 50%, 60%);
  @include defineColorHSL(--color-success-light, 122, 50%, 69%);
  @include defineColorHSL(--color-success-lighter, 122, 50%, 76%);

  @include defineColorHSL(--color-error-darker, 342, 89%, 38%);
  @include defineColorHSL(--color-error-dark, 342, 89%, 43%);
  @include defineColorHSL(--color-error, 342, 89%, 48%);
  @include defineColorHSL(--color-error-light, 342, 89%, 56%);
  @include defineColorHSL(--color-error-lighter, 342, 89%, 62%);

  // background
  @include defineColorHSL(--color-bg-darker, 210, 4%, 89%);
  @include defineColorHSL(--color-bg-dark, 180, 3%, 94%);
  @include defineColorHSL(--color-bg, 0, 0%, 100%);
  @include defineColorHSL(--color-bg-light, 180, 3%, 100%);
  @include defineColorHSL(--color-bg-lighter, 210, 4%, 100%);

  // color contrasts
  @include defineColorHSL(--color-contrast-lower, 180, 1%, 84%);
  @include defineColorHSL(--color-contrast-low, 210, 2%, 64%);
  @include defineColorHSL(--color-contrast-medium, 204, 2%, 46%);
  @include defineColorHSL(--color-contrast-high, 210, 7%, 21%);
  @include defineColorHSL(--color-contrast-higher, 204, 28%, 7%);

  // gradients
  @include defineColorHSL(--gradient-primary-stop-1, 212, 12%, 24%);
  @include defineColorHSL(--gradient-primary-stop-2, 197, 13%, 68%);
}

[data-theme="dark"] {
  // main
  @include defineColorHSL(--color-primary-darker, 250, 93%, 57%);
  @include defineColorHSL(--color-primary-dark, 250, 93%, 61%);
  @include defineColorHSL(--color-primary, 250, 93%, 65%);
  @include defineColorHSL(--color-primary-light, 250, 93%, 69%);
  @include defineColorHSL(--color-primary-lighter, 250, 93%, 72%);

  @include defineColorHSL(--color-accent-darker, 342, 92%, 41%);
  @include defineColorHSL(--color-accent-dark, 342, 92%, 47%);
  @include defineColorHSL(--color-accent, 342, 92%, 54%);
  @include defineColorHSL(--color-accent-light, 342, 92%, 60%);
  @include defineColorHSL(--color-accent-lighter, 342, 92%, 65%);

  @include defineColorHSL(--color-secondary-darker, 212, 12%, 12%);
  @include defineColorHSL(--color-secondary-dark, 212, 12%, 18%);
  @include defineColorHSL(--color-secondary, 212, 12%, 24%);
  @include defineColorHSL(--color-secondary-light, 212, 12%, 30%);
  @include defineColorHSL(--color-secondary-lighter, 212, 12%, 36%);

  @include defineColorHSL(--color-black, 204, 28%, 7%);
  @include defineColorHSL(--color-white, 0, 0%, 100%);

  // feedback
  @include defineColorHSL(--color-warning-darker, 46, 100%, 47%);
  @include defineColorHSL(--color-warning-dark, 46, 100%, 50%);
  @include defineColorHSL(--color-warning, 46, 100%, 61%);
  @include defineColorHSL(--color-warning-light, 46, 100%, 71%);
  @include defineColorHSL(--color-warning-lighter, 46, 100%, 80%);

  @include defineColorHSL(--color-success-darker, 122, 50%, 47%);
  @include defineColorHSL(--color-success-dark, 122, 50%, 52%);
  @include defineColorHSL(--color-success, 122, 50%, 60%);
  @include defineColorHSL(--color-success-light, 122, 50%, 69%);
  @include defineColorHSL(--color-success-lighter, 122, 50%, 76%);

  @include defineColorHSL(--color-error-darker, 342, 92%, 41%);
  @include defineColorHSL(--color-error-dark, 342, 92%, 47%);
  @include defineColorHSL(--color-error, 342, 92%, 54%);
  @include defineColorHSL(--color-error-light, 342, 92%, 60%);
  @include defineColorHSL(--color-error-lighter, 342, 92%, 65%);

  // background
  @include defineColorHSL(--color-bg-darker, 204, 15%, 6%);
  @include defineColorHSL(--color-bg-dark, 203, 18%, 9%);
  @include defineColorHSL(--color-bg, 203, 24%, 13%);
  @include defineColorHSL(--color-bg-light, 203, 18%, 17%);
  @include defineColorHSL(--color-bg-lighter, 204, 15%, 20%);

  // color contrasts
  @include defineColorHSL(--color-contrast-lower, 208, 12%, 24%);
  @include defineColorHSL(--color-contrast-low, 208, 6%, 40%);
  @include defineColorHSL(--color-contrast-medium, 213, 5%, 56%);
  @include defineColorHSL(--color-contrast-high, 223, 8%, 82%);
  @include defineColorHSL(--color-contrast-higher, 240, 100%, 99%);

  // gradients
  @include defineColorHSL(--gradient-primary-stop-1, 250, 93%, 65%);
  @include defineColorHSL(--gradient-primary-stop-2, 300, 93%, 65%);
}

// background color
.bg-secondary-darker {
  background-color: alpha(var(--color-secondary-darker), var(--bg-o, 1));
}
.bg-secondary-dark {
  background-color: alpha(var(--color-secondary-dark), var(--bg-o, 1));
}
.bg-secondary {
  background-color: alpha(var(--color-secondary), var(--bg-o, 1));
}
.bg-secondary-light {
  background-color: alpha(var(--color-secondary-light), var(--bg-o, 1));
}
.bg-secondary-lighter {
  background-color: alpha(var(--color-secondary-lighter), var(--bg-o, 1));
}

// background gradient
.bg-gradient-primary {
  background-image: radial-gradient(var(--gradient-primary-stop-1), var(--gradient-primary-stop-2));
}
.bg-gradient-primary-top {
  background-image: linear-gradient(0deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2));
}
.bg-gradient-primary-right {
  background-image: linear-gradient(90deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2));
}
.bg-gradient-primary-bottom {
  background-image: linear-gradient(180deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2));
}
.bg-gradient-primary-left {
  background-image: linear-gradient(270deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2));
}

// border gradient
.border-gradient-primary {
  border-image: radial-gradient(var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)) 1;
}
.border-gradient-primary-top {
  border-image: linear-gradient(0deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)) 1;
}
.border-gradient-primary-right {
  border-image: linear-gradient(90deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)) 1;
}
.border-gradient-primary-bottom {
  border-image: linear-gradient(180deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)) 1;
}
.border-gradient-primary-left {
  border-image: linear-gradient(270deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)) 1;
}

// border color
.border-secondary-darker {
  border-color: alpha(var(--color-secondary-darker), var(--bg-o, 1));
}
.border-secondary-dark {
  border-color: alpha(var(--color-secondary-dark), var(--bg-o, 1));
}
.border-secondary {
  border-color: alpha(var(--color-secondary), var(--bg-o, 1));
}
.border-secondary-light {
  border-color: alpha(var(--color-secondary-light), var(--bg-o, 1));
}
.border-secondary-lighter {
  border-color: alpha(var(--color-secondary-lighter), var(--bg-o, 1));
}

// --------------------------------

// (END) Global editor code

// --------------------------------
